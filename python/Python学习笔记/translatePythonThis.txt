The Zen of Python, by Tim Peters

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!

Python的禅宗中，彼得斯

美丽优于丑陋。
明确优于隐式的。
简单优于复杂。
复杂优于复杂。
平优于嵌套。
稀疏优于密度。
可读性罪名。
有特殊情况特殊，不违反规定。
虽然实用性节拍的纯洁性。
错误不应该通过无声。
除非明确沉默。
在模糊的脸，拒绝诱惑猜测。
应该有一个 - 最好只有一个 - 明显的方法来做到这一点。
虽然这样可能不是很明显的，除非你是第一个荷兰人。
现在是好过。
虽然从未往往比*权*现在。
如果实现是很难解释，这是一个坏主意。
如果实现是很容易解释，它可能是一个好主意。
命名空间是一个鸣喇叭的伟大构想 - 让我们做的还要多！